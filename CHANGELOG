v0.30
  - NCMINMAX: cosmetics
v0.29
  PS 20250515
  - NCMASK: removed redundant includes; corrected the usage message.
  - NCMINMAX: slightly modified the usage; merged the processing for two mask
    types.
v0.28
  PS 20250514
  - NCMASK: rewrote as hinted below.
v0.27
  PS 20250514
  - NCMASK: modified to handle data types other than float or double. Added
    writing the command and work directory as global attributes, like in other
    utilities. (But upon consiideration it is asking for a rewrite because there
    is no good reason for using ncutils there.)
v0.26
  PS 20250513
  - REGRID_LL: added a new option "-s": do not use data from opposite
    (north/south) hemisphere. Can be useful when e.g. interpolating sea-ice
    data.
  - REGRID_LL: moved option "-s" to "-b".
v0.25
  PS 20250509
  - REGRID_LL: added an option "-k k1 [k2]" to interpolate specified layers
      only.
v0.24
  PS 20250509
  - REGRID_LL: added a check on consistency of arguments whith the option "-t"
      (src mask must be specified and dst mask must not).
v0.23
  PS 20250508
  - Added new utility NCMASK. Its purpose is filling the "land" data with 0s or
      NaNs (NetCDF fill values). Note: at the moment works with variables of
      type float or double (NC_FLOAT/NC_DOUBLE) only.
  - NCMINMAX: cosmetic changes.
  - ncutils.c, ncutils.h: added ncu_writefield_double().
v0.22
  PS 20250505
  - REGRID_LL: modified to make it possible using 2D mask (0 and 1s) rather
      than 3D mask (number of watered layers).
v0.21
  PS 20250505
  - REGRID_LL: to increase speed when interpolating from global to regional
      grids - skip building interpolator for south or north projection when it
      is not required.
v0.20
  PS 20250505
  - REGRID_LL: modified code to make it possible interpolation between
      structured and unstructered grids.
  - NCMINMAX: a minor improvement in parse_command_line().
v0.19
  PS 20250502
  - NCMINMAX: a minor correction of usage.
  - REGRID_LL: added "finished" to the log at the very end. 
v0.18
  PS 20250410
  - REGRID_LL: a minor correction that can affect logs.
v0.17
  PS 20250410
  - REGRID_LL: a minor correction that appear not affecting results.
v0.16
  PS 20250409
  -- REGRID_LL: added option "-t" to use (actually, interpolate) the source
     mask for destination.
v0.15
  PS 20250408
  -- Fixed reading of the source mask in regrid_ll (was skipped in some/most?
     cases).
v0.14
  PS 20250407
  -- Added new utility ncminmax (apps/ncminmax.c).
v0.13
  PS 20241121
  -- A minor correction of usage in ncd2f.c.
  -- A number of cosmetic modifications in distribute.[ch].
v0.12
  PS 20241118
  -- Added option "-N" to ncd2f. It forces copying dimensions from source to
     destination in the original order and is necessary for processing NEMO
     tiles to enable rebuilding of the restart.
v0.11
  PS 20241022
  -- Modified ncw_copy_atts() to aleviate casting of default fill value for
     NC_DOUBLE to 0 when converting to NC_FLOAT.
v0.10
  PS 20241016
  -- In nc2df added option "-x <var> [...]" to exclude variables from
     copying/convertion.
v0.09
  PS 20241015
  -- Fixed defect in ncw_get_var_float_fixerange().
v0.08
  PS 20241015
  -- A couple more fixes in ncd2f.c.
v0.07
  PS 20241015
  -- Fixed several defects in ncd2f.c.
  -- Added ncw_get_vara_float_fixerange() to enable smooth reading in
     ncu_readfield().
v0.06
  PS 20241015
  -- Added utility ncd2f to convert restart dumps from double to float.
  -- Added ncu_getnfields() to enable ncd2f converting by layers to reduce
     memory when processing very large dumps.
  -- Added ncw_get_var_float_fixerange() to bypass NC_ERANGE errors ("numeric
     conversion not representable" when reading double variables into float
     arrays.
v0.05
  PS 20240820
  -- regrid_ll: added option of setting the deflation level.
v0.04
  PS 20240814
   -- Modified ncw_def_var_as() to call ncw_copy_atts() rather than just copying
      non-special atttributes in a cycle.
v0.03
  PS 20240814
  -- regrid_ll: added option "-m" for NaN fill (default = zero fill).
v0.02
  PS 20240814
  -- ncu_readvarfloat(): fixed mismatch between allocation and deallocation
     conditions (could lead to memory leak).
  -- ncu_readfield(): read into native type if (vartype != NC_FLOAT), not if
     (typesize != ncw_sizeof(NC_FLOAT)) used before. The old condition could
     lead to wrong treatment of fill values etc.
v0.01
  PS 20240802
  -- regrid_ll: allow only one input point in the tiny circle around the south
     pole for the south projection and around the north pole for the north
     projection; otherwise delaunay tringulation related stuff has numeric
     problems. (This should not ffect results.)
  -- regrid_ll: fixed mask setup for the destination grid.
v0.00
  PS 20240723
  -- Initial submission
