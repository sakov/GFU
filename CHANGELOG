v0.13
  PS 20241121
  -- A minor correction of usage in ncd2f.c.
  -- A number of cosmetic modifications in distribute.[ch].
v0.12
  PS 20241118
  -- Added option "-N" to ncd2f. It forces copying dimensions from source to
     destination in the original order and is necessary for processing NEMO
     tiles to enable rebuilding of the restart.
v0.11
  PS 20241022
  -- Modified ncw_copy_atts() to aleviate casting of default fill value for
     NC_DOUBLE to 0 when converting to NC_FLOAT.
v0.10
  PS 20241016
  -- In nc2df added option "-x <var> [...]" to exclude variables from
     copying/convertion.
v0.09
  PS 20241015
  -- Fixed defect in ncw_get_var_float_fixerange().
v0.08
  PS 20241015
  -- A couple more fixes in ncd2f.c.
v0.07
  PS 20241015
  -- Fixed several defects in ncd2f.c.
  -- Added ncw_get_vara_float_fixerange() to enable smooth reading in
     ncu_readfield().
v0.06
  PS 20241015
  -- Added utility ncd2f to convert restart dumps from double to float.
  -- Added ncu_getnfields() to enable ncd2f converting by layers to reduce
     memory when processing very large dumps.
  -- Added ncw_get_var_float_fixerange() to bypass NC_ERANGE errors ("numeric
     conversion not representable" when reading double variables into float
     arrays.
v0.05
  PS 20240820
  -- regrid_ll: added option of setting the deflation level.
v0.04
  PS 20240814
   -- Modified ncw_def_var_as() to call ncw_copy_atts() rather than just copying
      non-special atttributes in a cycle.
v0.03
  PS 20240814
  -- regrid_ll: added option "-m" for NaN fill (default = zero fill).
v0.02
  PS 20240814
  -- ncu_readvarfloat(): fixed mismatch between allocation and deallocation
     conditions (could lead to memory leak).
  -- ncu_readfield(): read into native type if (vartype != NC_FLOAT), not if
     (typesize != ncw_sizeof(NC_FLOAT)) used before. The old condition could
     lead to wrong treatment of fill values etc.
v0.01
  PS 20240802
  -- regrid_ll: allow only one input point in the tiny circle around the south
     pole for the south projection and around the north pole for the north
     projection; otherwise delaunay tringulation related stuff has numeric
     problems. (This should not ffect results.)
  -- regrid_ll: fixed mask setup for the destination grid.
v0.00
  PS 20240723
  -- Initial submission
